#!/bin/bash
set -e -x

export PATH="/var/vcap/packages/dynatrace-oneagent:$PATH"

export DOWNLOADURL=<%= properties.dynatrace.downloadurl %>
export PROXY=<%= properties.dynatrace.proxy %>
export ENV_ID=<%= properties.dynatrace.environmentid %>
export API_TOKEN=<%= properties.dynatrace.apitoken %>
export API_URL=<%= properties.dynatrace.apiurl %>
export SSL_MODE=<%= properties.dynatrace.sslmode %>
export APP_LOG_CONTENT_ACCESS=<%= properties.dynatrace.applogaccess %>
export START_HELPER=<%= properties.dynatrace.starthelper %>

export TMPDIR=/var/vcap/data/tmp

RUN_DIR=/var/vcap/sys/run/dynatrace-oneagent
LOG_DIR=/var/vcap/sys/log/dynatrace-oneagent
LOG_FILE=$LOG_DIR/dynatrace-install.log
mkdir -p ${RUN_DIR} ${LOG_DIR}


ARGS=""
if [ "$PROXY" != "" ]; then
  ARGS="$ARGS PROXY=$PROXY"
  export https_proxy="$PROXY"
  export http_proxy="$PROXY"
fi

if [ "$APP_LOG_CONTENT_ACCESS" != "" ]; then
  ARGS="$ARGS APP_LOG_CONTENT_ACCESS=$APP_LOG_CONTENT_ACCESS"
fi

# set downloadurl if not given
if [ "$DOWNLOADURL" == "" ]; then
  if [ "x$ENV_ID" == "x" ] && [ "x$API_TOKEN" == "x" ]; then
    echo "Invalid configuration:" >> $LOG_FILE
    echo "Please set environment ID and API token for Dynatrace OneAgent." >> $LOG_FILE
    exit 1
  fi
  if [ "x$API_URL" == "x" ]; then
    API_URL="https://$ENV_ID.live.dynatrace.com/api"
  fi
  DOWNLOADURL="$API_URL/v1/deployment/installer/agent/unix/default/latest?Api-Token=$API_TOKEN"
fi

SSL_FLAG=""
if [ "$SSL_MODE" == "all" ]; then
  echo "accepting all ssl certificates for agent download" >> $LOG_FILE
  SSL_FLAG="--insecure"
fi

getInstallDir() {
        local INSTALL_DIR="/opt/dynatrace/oneagent"

        if [ -d /var/vcap/data ] && [ $(df --output=avail -m /var/vcap/data | sed 1d) -gt 2048 ]; then
          INSTALL_DIR="/var/vcap/data/dynatrace/oneagent"
        fi

        echo ${INSTALL_DIR}
}

getWatchdogPid() {
        local AGENT_BIN=oneagentos
        local AGENT_WATCHDOG=oneagentwatchdog

        # grep -v "grep" is required, because ps -ef returns also "grep '${AGENT_WATCHDOG}.*${AGENT_BIN}"' process
        # grep -v "sudo" it is enough to use "direct" watchdog pids, filter sudo calls with watchdog params.
        ps -ef | grep "${AGENT_WATCHDOG}" | grep "${AGENT_BIN}" | grep -v "grep" | grep -v "sudo" | awk ' { print $2 } '
}

startOneAgentHelper() {
  #gdn is the daemon for garden-runc >= 1.2.0
  if pgrep -x "gdn" > /dev/null
  then
    echo "Found gdn process. Starting oneagenthelper..." >> $LOG_FILE 2>> $LOG_FILE
    /opt/dynatrace/oneagent/agent/lib64/oneagenthelper -p `pgrep -x gdn` --garden &
  fi

  #guardian is the daemon for garden-runc < 1.2.0
  if pgrep -x "guardian" > /dev/null
  then
    echo "Found guardian process. Starting oneagenthelper..." >> $LOG_FILE 2>> $LOG_FILE
    /opt/dynatrace/oneagent/agent/lib64/oneagenthelper -p `pgrep -x guardian` --garden &
  fi
}

stopOneAgentHelper() {
  if pgrep -x "oneagenthelper" > /dev/null
  then
    echo "Stopping oneagenthelper..." >> $LOG_FILE 2>> $LOG_FILE
    pkill -x oneagenthelper  >> $LOG_FILE 2>> $LOG_FILE
  fi
}

uninstallOneAgent(){
  echo "Trying to uninstall the OneAgent..." >> $LOG_FILE 2>> $LOG_FILE
  if [ -f /opt/dynatrace/oneagent/agent/uninstall.sh ]; then
    echo "Found uninstall script to run..." >> $LOG_FILE 2>> $LOG_FILE
    sh /opt/dynatrace/oneagent/agent/uninstall.sh  >> $LOG_FILE 2>> $LOG_FILE
  fi

  # Stop oneagenthelper
  if [ "x$START_HELPER" != "x0" ]; then
    stopOneAgentHelper
  fi

  echo "Cleaning up /opt/dynatrace/oneagent..." >> $LOG_FILE 2>> $LOG_FILE
  rm -rf /opt/dynatrace/oneagent
}


case $1 in
  start)
    pid=$(getWatchdogPid)
    # If the watchdog was stopped or rolled over...
    if [ "$pid" == "" ]; then
      mkdir -p $TMPDIR
      curl -L $SSL_FLAG -o $TMPDIR/Dynatrace-OneAgent-Linux.sh $DOWNLOADURL >> $LOG_FILE 2>> $LOG_FILE
      chmod 755 $TMPDIR/Dynatrace-OneAgent-Linux.sh >> $LOG_FILE 2>> $LOG_FILE
      install_path=$(getInstallDir)

      if [ -d /opt/dynatrace/oneagent ]; then
        echo "Found leftovers in /opt/dynatrace/oneagent" >> $LOG_FILE 2>> $LOG_FILE
        uninstallOneAgent
      fi

      sh $TMPDIR/Dynatrace-OneAgent-Linux.sh $ARGS INSTALL_PATH=$install_path >> $LOG_FILE 2>> $LOG_FILE

      # Start oneagenthelper manually
      if [ "x$START_HELPER" != "x0" ]; then
        echo "starthelper is enabled" >> $LOG_FILE 2>> $LOG_FILE
        startOneAgentHelper
      fi
      pid=$(getWatchdogPid)
    fi
    echo $pid > ${RUN_DIR}/dynatrace-watchdog.pid
    ;;

  stop)
    uninstallOneAgent
    ;;
esac
